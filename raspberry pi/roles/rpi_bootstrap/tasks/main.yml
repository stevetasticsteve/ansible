- name: Set up new admin user
  user:
   name: "{{ new_admin_user.name }}"
   shell: /bin/bash
   password: "{{ new_admin_user.password | password_hash('sha512')}}"
   groups: 
   - "{{ new_admin_user.groups }}"
   append: yes
   update_password: on_create
   state: present

- name: Authorize SSH key
  authorized_key:
    user: "{{ new_admin_user.name }}"
    key: "{{ new_admin_user.key }}"
    state: present

- name: Update system
  apt:
    upgrade: dist
    update_cache: yes

- name: Install ufw
  apt:
    name: ufw
    state: present
  notify: reboot

- name: Set static IP on eth0
  template:
    src: dhcpcd.j2
    dest: /etc/dhcpcd.conf
    owner: root
    mode: "0664"
  notify: reboot

- name: Execute handlers
  meta: flush_handlers

- name: change user
  set_fact:
    ansible_user: "{{ new_admin_user.name }}"
    ansible_become_password: "{{ new_admin_user.password }}"
  when: ansible_user != new_admin_user.name

- name: remove pi user
  user:
    name: pi
    state: absent
    remove: yes
    force: yes

- name: Configure ssh
  include_tasks: ssh.yml

- name: Add additional users
  user:
   name: "{{ item.name }}"
   shell: /bin/bash
   password: "{{ item.password | password_hash('sha512')}}"
   groups: 
   - "{{ item.groups }}"
   append: yes
   update_password: on_create
  loop: "{{ additional_users }}"
  when: additional_users is defined

- name: Authorize additional SSH keys
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.key }}"
    state: present
  with_items: "{{ additional_users }}"
  when: additional_users is defined

- name: Set hostname
  hostname:
    name: "{{ hostname }}"

- name: Install basic packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - duplicity
    - python3-pip
    - python3-distutils
    - python3-psutil
    - python3-venv


- name: Enable firewall
  ufw:
    state: enabled
    rule: allow
    name: ssh

- name: mount external storage
  mount:
    path: "{{ item.mount_point }}"
    src: "UUID={{ item.uuid }}"
    fstype: "{{ item.type }}"
    state: mounted
    opts: nofail,defaults
  loop: "{{ external_storage }}"
  when: external_storage is defined

- name: set permisions on mount points
  file:
    state: directory
    owner: "{{ new_admin_user.name }}"
    mode: "0777"
    path: "{{ item.mount_point }}"
  loop: "{{ external_storage }}"
  when: external_storage is defined
 

