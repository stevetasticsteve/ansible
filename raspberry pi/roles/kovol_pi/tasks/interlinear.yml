- name: Download text code
  git:
    repo: https://github.com/stevetasticsteve/text_interlinear
    dest: "/code/texts"
    version: master
    force: yes
    
- name: Install text script dependencies
  pip:
    requirements: "/code/texts/requirements.txt"
    virtualenv: "/code/texts/venv"
    virtualenv_command: python3 -m venv
    
- name: Set text script settings
  copy:
    src: "interlinear_settings.py"
    dest: "/code/texts/settings.py"
    mode: "0755"
    owner: "{{ user }}"
    
- name: Schedule text update
  cron:
    name: Texts update
    user: www-data
    state: present
    job: "bash /code/texts/run_interlinear.sh"
    minute: "*/10"
    
- name: Symlink the source xml directory
  file:
      src: "{{ external_storage[0].mount_point}}/docker-data/volumes/nextcloud_data/_data/data/steve/files/Team Share/texts/"
      dest: /code/texts/xml
      owner: "www-data"
      group: "www-data"
      mode: "0755"
      state: link
      force: yes

# This symlink is a hack to allow Nginx to serve audio files. The link will appear broken on the host because it maps
# to the container's fs. A neater way to do this would probably be creating my own Nginx image with the symlink as part
# of the image, but it seems less reliable. The link may not exist yet, an error has the potential to derail the entire 
# compose file, whereas if this link fails it's only audio that won't play.
- name: Symlink the source audio directory
  file:
      src: "/nextcloud/data/steve/files/Team Share/texts/audio"
      dest: /html/texts/audio
      owner: "www-data"
      group: "www-data"
      state: link
      force: yes